name: Build, Test and Deploy

env:
  AWS_REGION_NAME: ca-central-1
  DEPLOY_PACKAGE_NAME: incuboweb2022-${{ github.sha }}.zip
  VERSION_LABEL: incuboweb2022-${{ github.sha }}

on:
  push:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Dev Container For Tests
        run: docker build -t incuboweb2022 -f ./client/Dockerfile.dev ./client

      - name: Run Tests
        run: docker run -e CI=true incuboweb2022 npm test

  send-to-s3:
    runs-on: ubuntu-latest
    needs: [run-tests]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Create Zip Deployment Pacakge
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x "*.git*" # exclude the git files

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Copy Deployment Package to S3
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ secrets.S3_BUCKET_NAME }}/incuboweb2022/

  build-and-push-to-ecr:
    runs-on: ubuntu-latest
    needs: [send-to-s3]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Client - Build Tag and Push to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: incuboweb2022
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t incuboweb2022 ./client
          docker tag incuboweb2022:latest 526452955669.dkr.ecr.ca-central-1.amazonaws.com/incuboweb2022:latest
          docker push 526452955669.dkr.ecr.ca-central-1.amazonaws.com/incuboweb2022:latest

      - name: NGINX - Build Tag and Push to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: incubo-nginx
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t incubo-nginx ./nginx
          docker tag incubo-nginx:latest 526452955669.dkr.ecr.ca-central-1.amazonaws.com/incubo-nginx:latest
          docker push 526452955669.dkr.ecr.ca-central-1.amazonaws.com/incubo-nginx:latest

  create-eb-application-version-and-update:
    runs-on: ubuntu-latest
    needs: [build-and-push-to-ecr]
    env:
      VERSION_LABEL: ${{ env.VERSION_LABEL }}

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Creat App Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name Incubo-Client \
          --version-label "${{ env.VERSION_LABEL }}" \
          --description "${{ env.VERSION_LABEL }}" \
          --source-bundle S3Bucket="${{ secrets.S3_BUCKET_NAME }}",S3Key="incuboweb2022/${{ env.DEPLOY_PACKAGE_NAME }}"

      - name: Deploy New Version To Elastic Beanstalk
        run: aws elasticbeanstalk update-environment --environment-name Incuboclient-env --version-label "${{ env.VERSION_LABEL }}"
